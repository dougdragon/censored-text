{"version":3,"sources":["utils/getKeywordsAndPhrases.js","utils/censorString.js","hooks/useFocus.js","components/TextInput/TextInput.js","App.js","reportWebVitals.js","index.js"],"names":["getKeywordsAndPhrases","keywordsAndPhrases","split","filter","val","censorString","originalString","censoredKeywords","phrasesAndKeywords","re","RegExp","join","replace","useFocus","htmlElRef","useRef","current","focus","TextInput","useState","textAreaValue","setTextAreaValue","keywordsValue","setKeywordsValue","isSubmitted","setIsSubmitted","inputRef","setInputFocus","className","onSubmit","event","preventDefault","placeholder","onChange","e","target","value","autoFocus","ref","type","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAQeA,EARe,SAAAC,GAG5B,OAAOA,EACJC,MAH0B,oBAI1BC,QAAO,SAAAC,GAAG,OAAIA,MCIJC,EAPM,SAACC,EAAgBC,GACpC,IAAMC,EAAqBR,EAAsBO,GAC3CE,EAAK,IAAIC,OAAOF,EAAmBG,KAAK,KAAM,MAEpD,OAAOL,EAAeM,QAAQH,EAAI,SCErBI,EANE,WACf,IAAMC,EAAYC,iBAAO,MAGzB,MAAO,CAACD,EAFS,WAAO,IAAD,EAAW,OAATA,QAAS,IAATA,GAAA,UAAAA,EAAWE,eAAX,SAAoBC,W,OCiEhCC,EAjEG,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACfC,EADe,KACAC,EADA,OAEoBF,mBAAS,IAF7B,mBAEfG,EAFe,KAEAC,EAFA,OAGgBJ,oBAAS,GAHzB,mBAGfK,EAHe,KAGFC,EAHE,OAIYZ,IAJZ,mBAIfa,EAJe,KAILC,EAJK,KAkBtB,OACE,qCACE,qBAAKC,UAAU,uCAAf,SACE,uBAAMA,UAAU,qCAAqCC,SAftC,SAAAC,GACnBA,EAAMC,iBACNV,EAAiBhB,EAAae,EAAeE,IAC7CG,GAAe,IAYX,UACE,qBAAKG,UAAU,YAAf,SACE,2BAAUA,UAAU,cAApB,UACE,gDACA,0BACEA,UAAU,+BACVI,YAAY,kCACZC,SAAU,SAAAC,GAAC,OAAIb,EAAiBa,EAAEC,OAAOC,QACzCC,WAAW,EACXC,IAAKZ,IAEP,yDACA,0BACEE,UAAU,cACVI,YAAY,oFACZC,SAAU,SAAAC,GAAC,OAAIX,EAAiBW,EAAEC,OAAOC,eAI/C,sBAAKR,UAAU,YAAf,UACE,wBACEA,UAAU,8BACVW,KAAK,SAFP,oBAMA,wBACEX,UAAU,+CACVW,KAAK,QACLC,QAtCQ,WAClBnB,EAAiB,IACjBI,GAAe,GACfE,KAgCQ,2BAULH,GAAeJ,GACd,qBAAKQ,UAAU,gBAAf,SACE,yCAAW,sBAAMA,UAAU,eAAhB,SAAgCR,aCvDtCqB,EAJH,WACV,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8ac05637.chunk.js","sourcesContent":["const getKeywordsAndPhrases = keywordsAndPhrases => {\n  const spacesAndQuotesRegex = / |['\"](.*?)['\"]/g;\n\n  return keywordsAndPhrases\n    .split(spacesAndQuotesRegex)\n    .filter(val => val);\n}\n\nexport default getKeywordsAndPhrases;\n","import getKeywordsAndPhrases from \"./getKeywordsAndPhrases\";\n\nconst censorString = (originalString, censoredKeywords) => {\n  const phrasesAndKeywords = getKeywordsAndPhrases(censoredKeywords);\n  const re = new RegExp(phrasesAndKeywords.join(\"|\"), \"gi\");\n\n  return originalString.replace(re, \"XXXX\");\n}\n\nexport default censorString;\n","import { useRef } from \"react\"\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null)\n  const setFocus = () => { htmlElRef?.current?.focus() }\n\n  return [htmlElRef, setFocus]\n}\nexport default useFocus;\n","import React, { useState } from \"react\";\nimport censorString from \"../../utils/censorString\";\nimport useFocus from \"../../hooks/useFocus\";\n\nconst TextInput = () => {\n  const [textAreaValue, setTextAreaValue] = useState(\"\");\n  const [keywordsValue, setKeywordsValue] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [inputRef, setInputFocus] = useFocus();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setTextAreaValue(censorString(textAreaValue, keywordsValue))\n    setIsSubmitted(true);\n  }\n\n  const handleReset = () => {\n    setTextAreaValue(\"\");\n    setIsSubmitted(false);\n    setInputFocus();\n  }\n\n  return (\n    <>\n      <div className=\"wrapper uk-margin-top uk-margin-left\">\n        <form className=\"uk-form-horizontal uk-margin-large\" onSubmit={handleSubmit}>\n          <div className=\"uk-margin\">\n            <fieldset className=\"uk-fieldset\">\n              <label>Text input:</label>\n              <textarea\n                className=\"uk-textarea uk-margin-bottom\"\n                placeholder=\"Enter the string to be censored\"\n                onChange={e => setTextAreaValue(e.target.value)}\n                autoFocus={true}\n                ref={inputRef}\n              />\n              <label>Keywords and phrases</label>\n              <textarea\n                className=\"uk-textarea\"\n                placeholder=\"Enter keywords and/or phrases wrapped in quotes (single or double) to be censored\"\n                onChange={e => setKeywordsValue(e.target.value)}\n              />\n            </fieldset>\n          </div>\n          <div className=\"uk-margin\">\n            <button\n              className=\"uk-button uk-button-primary\"\n              type=\"submit\"\n            >\n              Submit\n            </button>\n            <button\n              className=\"uk-button uk-button-secondary uk-margin-left\"\n              type=\"reset\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          </div>\n        </form>\n      </div>\n      {isSubmitted && textAreaValue &&\n        <div className=\"uk-text-large\">\n          <p>Output: <span className=\"uk-text-bold\">{textAreaValue}</span></p>\n        </div>\n      }\n    </>\n  );\n}\nexport default TextInput;\n","import React from \"react\";\nimport './App.css';\nimport TextInput from \"./components/TextInput/TextInput\";\n\nconst App = () => {\n  return <TextInput />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}